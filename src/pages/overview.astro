---
import fs from 'node:fs';
// import {Image} from 'astro:assets'
import { dirname, resolve } from 'node:path';
import { fileURLToPath } from 'node:url';
import DefaultLayout from '../layouts/Default.astro';

const __dirname = dirname(fileURLToPath(import.meta.url));
const imagesPath = resolve(__dirname, '../../public/images/');
const files = fs.readdirSync(imagesPath);

type ImageInfo = {
	name: string;
	url: string;
};
const imageInfos: ImageInfo[] = files.map((file: string) => {
	return {
		name: file,
		url: `${Astro.url.origin}/images/${file}`,
	};
});
---

<style>
	body {
		height: 100svh;
		display: flex;
		justify-content: center;
		align-items: center;
	}
	main {
		max-width: 300px;
		margin: 0 auto;
	}
	figure {
		display: flex;
		flex-direction: row;
		align-items: start;
	}
	figcaption {
		font-size: 0.8rem;
		margin-left: auto;
		display: flex;
		gap: 0.5rem;
	}
	figure img {
		max-width: 100%;
	}
	ul {
		list-style: none;
		padding: 0;
	}
	li {
		margin-bottom: 1rem;
	}
	input {
		width: 100%;
		margin-left: auto;
	}
	button {
		background-color: #007bff;
		color: white;
		border: none;
		padding: 0.5rem;
		cursor: pointer;
		width: 80px;
	}
	.image-wrapper {
		width: 100px;
		min-height: 50px;
		overflow: hidden;
	}
</style>
<DefaultLayout title="Assets">
	<main>
		<ul class="images">
			{
				imageInfos.map(({ name, url }) => (
					<li>
						<figure>
							<div class="image-wrapper">
								<img src={`/images/${name}`} alt={name} />
							</div>
							<figcaption>
								<input type="text" name="" id={name} value={url} />{' '}
								<button data-image-url={url}>copy</button>
							</figcaption>
						</figure>
					</li>
				))
			}
		</ul>
	</main>
	<script is:inline>
		console.log('Hello from inline script');
		const buttons = document.querySelectorAll('figcaption > button');
		if (!buttons) throw new Error('No inputs found');
		buttons.forEach((button) => {
			button.addEventListener('click', () => {
				navigator.clipboard.writeText(button.getAttribute('data-image-url'));
				setTimeout(() => {
					button.textContent = 'copied';
					setTimeout(() => {
						button.textContent = 'copy';
					}, 1000);
				}, 10);
			});
		});
	</script>
</DefaultLayout>
